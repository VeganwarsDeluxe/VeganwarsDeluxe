from core.Items.Item import FreeItem
from core.TargetType import TargetType, OwnOnly
from .Dummy import Dummy
import modern
from core.Action import DecisiveAction
import random


class Cow(Dummy):
    def __init__(self, session):
        super().__init__(session, name='–ö–æ—Ä–æ–≤–∞|üêÆ')

        self.hp = 1
        self.max_hp = 1
        self.max_energy = 5

        self.team = 'cows'

    def choose_act(self):
        super().choose_act()

        self.action = random.choice([
            EatGrassReload(self), WalkAway(self), Silence(self), Run(self),
            CowApproach(self) if random.choice([True, False]) else Silence(self),
        ])
        self.item_queue.append(Milk(self)) if self.action.id == 'silence' else None


class CowApproach(DecisiveAction):
    id = 'cow_approach'
    name = '–ü–æ–¥–æ–π—Ç–∏'

    def __init__(self, source):
        super().__init__(source, OwnOnly())

    def func(self, source, target):
        source.nearby_entities = list(filter(lambda t: t != source, source.session.entities))
        for entity in source.nearby_entities:
            entity.nearby_entities.append(source) if source not in entity.nearby_entities else None
        source.session.say(f'üë£|{source.name} —Å –∏–Ω—Ç–µ—Ä–µ—Å–æ–º –ø–æ–¥—Ö–æ–¥–∏—Ç.')


class Silence(DecisiveAction):
    id = 'cow_silence'
    name = '–¢–∏—Ö–æ —Å—Ç–æ—è—Ç—å'

    def __init__(self, source):
        super().__init__(source, OwnOnly())


class Run(DecisiveAction):
    id = 'cow_dodge'
    name = '–ü–µ—Ä–µ–±–µ–≥–∞—Ç—å –ø–æ–ª–µ'

    def __init__(self, source):
        super().__init__(source, OwnOnly())

    def func(self, source, target):
        source.session.say(f'üí®|{source.name} –ø–µ—Ä–µ–±–µ–≥–∞–µ—Ç –ø–æ–ª–µ!')


class WalkAway(DecisiveAction):
    id = 'cow_walk_away'
    name = '–û—Ç–æ–π—Ç–∏'

    def __init__(self, source):
        super().__init__(source, OwnOnly())

    def func(self, source, target):
        for entity in source.nearby_entities:
            entity.nearby_entities.remove(source) if source in entity.nearby_entities else None
        source.nearby_entities = []
        source.session.say(f'üë£|{source.name} –æ—Ç—Ö–æ–¥–∏—Ç –ø–æ–¥–∞–ª—å—à–µ.')


class EatGrassReload(DecisiveAction):
    id = 'reload'
    name = '–ü–æ—â–∏–ø–∞—Ç—å —Ç—Ä–∞–≤–∫—É'

    def __init__(self, source):
        super().__init__(source, OwnOnly())

    def func(self, source, target):
        source.session.say(f'üåø|{source.name} —â–∏–ø–∞–µ—Ç —Ç—Ä–∞–≤–∫—É. –ï–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ({source.max_energy})!')
        source.energy = source.max_energy


class Milk(FreeItem):
    id = 'milk'
    name = '–ú–æ–ª–æ–∫–æ'

    def __init__(self, source):
        super().__init__(source, target_type=OwnOnly())

    def use(self):
        if self.source.team == 'cows':
            return
        self.target.energy = self.target.max_energy
        self.target.session.say(f'ü•õ|{self.source.name} –ø—å–µ—Ç –º–æ–ª–æ–∫–æ! '
                                f'–ï–≥–æ –µ–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!')
