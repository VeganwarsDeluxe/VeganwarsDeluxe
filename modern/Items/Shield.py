from core.Items.Item import DecisiveItem
from core.Message import PostAttackMessage
from core.TargetType import Allies


class Shield(DecisiveItem):
    id = 'shield'
    name = '–©–∏—Ç'

    def __init__(self, source):
        super().__init__(source, target_type=Allies())

    def use(self):
        if self.target == self.source:
            self.target.session.say(f"üîµ|{self.source.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —â–∏—Ç. –£—Ä–æ–Ω –æ—Ç—Ä–∞–∂–µ–Ω!")
        else:
            self.target.session.say(f"üîµ|{self.source.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —â–∏—Ç –Ω–∞ {self.target.name}. –£—Ä–æ–Ω –æ—Ç—Ä–∞–∂–µ–Ω!")

        @self.source.session.event_manager.at(self.source.session.id, turn=self.source.session.turn,
                                              event=PostAttackMessage)
        def shield_block(message: PostAttackMessage):
            if message.target != self.target:
                return
            message.damage = 0
