from core.Actions.ActionManager import AttachedAction
from core.Actions.StateAction import DecisiveStateAction
from core.Entities import Entity
from core.Sessions import Session
from core.Skills.Skill import Skill
from core.TargetType import Enemies


class Thief(Skill):
    id = 'thief'
    name = '–í–æ—Ä'
    description = '–ï—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ç—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞ —Ü–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–µ–¥–º–µ—Ç, –≤—ã ' \
                  '–ø–æ–ª—É—á–∏—Ç–µ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç. –î–∞–µ—Ç +1 —Ç–æ—á–Ω–æ—Å—Ç–∏ –Ω–∞ –¥–∞–ª—å–Ω–æ–±–æ–π–Ω–∏–µ –æ—Ä—É–∂–∏—è. (–µ—â–µ –Ω–µ –¥–∞–µ—Ç)'

    def __init__(self, source):
        super().__init__(source)
        self.cooldown_turn = 0


@AttachedAction(Thief)
class Steal(DecisiveStateAction):
    id = 'steal'
    name = '–£–∫—Ä–∞—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç'
    priority = -2
    target_type = Enemies()

    def __init__(self, session: Session, source: Entity, skill: Thief):
        super().__init__(session, source, skill)
        self.state = skill

    def func(self, source, target):
        self.state.cooldown_turn = self.session.turn + 3
        success = False
        for item in [item for item in target.item_queue]:
            success = True
            self.session.say(f'üòè|{target.name} —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å {item.name}, –Ω–æ –≤–æ—Ä {source.name} –µ–≥–æ —É–∫—Ä–∞–ª!')
            target.item_queue.remove(item)
            source.items.append(item)
            item.source = source
            item.canceled = True
        if target.action.type == 'item':
            success = True
            self.session.say(f'üòè|{target.name} —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '
                             f'{target.action.name}, –Ω–æ –≤–æ—Ä {source.name} –µ–≥–æ —É–∫—Ä–∞–ª!')
            target.action.source = source
            source.items.append(target.action)
            target.action.canceled = True
        if not success:
            self.session.say(f'üòí|–í–æ—Ä—É {source.name} –Ω–µ —É–¥–∞–µ—Ç—Å—è –Ω–∏—á–µ–≥–æ —É–∫—Ä–∞—Å—Ç—å —É {target.name}!')
