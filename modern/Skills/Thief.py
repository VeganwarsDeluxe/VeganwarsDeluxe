from core.Skills.Skill import Skill
from core.Action import DecisiveAction
from core.TargetType import TargetType, Enemies


class Thief(Skill):
    def __init__(self):
        super().__init__(id='thief', name='–í–æ—Ä', constant=True)

    def __call__(self, source):
        pass

    def steal(self, source, target):
        success = False
        for item in target.using_items.copy():
            source.session.say(f'üòè|{target.name} —Ö–æ—Ç–µ–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å {item.name}, –Ω–æ –≤–æ—Ä {source.name} –µ–≥–æ —É–∫—Ä–∞–ª!')
            success = True
            source.items.append(item)
            item.canceled = True
        if not success:
            source.session.say(f'üòí|–í–æ—Ä—É {source.name} –Ω–µ —É–¥–∞–µ—Ç—Å—è –Ω–∏—á–µ–≥–æ —É–∫—Ä–∞—Å—Ç—å —É {target.name}!')

    @property
    def actions(self):
        return [
            DecisiveAction(self.steal, target_type=Enemies(), name='–£–∫—Ä–∞—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç', id='steal', priority=-1)
        ]


