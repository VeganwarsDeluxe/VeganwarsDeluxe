from core.Context import Context
from core.Decorators import RegisterEvent
from core.Events.DamageEvents import AttackGameEvent
from core.Decorators import RegisterState
from core.Events.Events import PreMoveGameEvent, AttachStateEvent, PreActionsGameEvent, HPLossGameEvent
from core.SessionManager import session_manager
from core.Sessions import Session
from core.Skills.Skill import Skill


class Berserk(Skill):
    id = 'berserk'
    name = '–ë–µ—Ä—Å–µ—Ä–∫'
    description = '–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –º–∞—Ç—á —Å 3 —ç–Ω–µ—Ä–≥–∏–∏. –ó–∞ –∫–∞–∂–¥–æ–µ –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–µ —Ö–ø –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 –∫ —Ç–µ–∫—É—â–µ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π ' \
                  '—ç–Ω–µ—Ä–≥–∏–∏. –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª—Å—è 1 —Ö–ø, —Ç–æ –≤–∞—à —É—Ä–æ–Ω —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 2.'


@RegisterState(Berserk)
def register(root_context: Context[AttachStateEvent]):
    session: Session = session_manager.get_session(root_context.event.session_id)
    source = session.get_entity(root_context.event.entity_id)

    @RegisterEvent(session.id, PreMoveGameEvent, priority=1)
    def pre_actions(context: Context[PreMoveGameEvent]):
        source.max_energy = max(7 - source.hp, 2)
        if context.event.turn == 1:
            source.energy = source.max_energy

    @RegisterEvent(session.id, event=HPLossGameEvent, priority=2)
    def hp_loss(context: Context[HPLossGameEvent]):
        if context.event.source != source:
            return
        source.energy = min(source.energy+context.event.hp_loss, source.max_energy)
        session.say(f"üò°|–ë–µ—Ä—Å–µ—Ä–∫ {source.name} –ø–æ–ª—É—á–∞–µ—Ç {context.event.hp_loss} —ç–Ω–µ—Ä–≥–∏–∏.")
        if source.hp == 1:
            session.say(f"üò°|–ë–µ—Ä—Å–µ—Ä–∫ {source.name} –≤—Ö–æ–¥–∏—Ç –≤ –±–æ–µ–≤–æ–π —Ç—Ä–∞–Ω—Å!")

    @RegisterEvent(session.id, event=AttackGameEvent)
    def attack_handler(attack_context: Context[AttackGameEvent]):
        if attack_context.event.source != source:
            return
        if source.hp != 1:
            return
        if attack_context.event.damage:
            attack_context.event.damage += 2
