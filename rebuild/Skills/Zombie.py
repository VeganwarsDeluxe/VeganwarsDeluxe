from core.Context import StateContext, EventContext
from core.ContentManager import RegisterEvent, RegisterState

from core.Events.Events import AttachStateEvent, HPLossGameEvent, PreDeathGameEvent

from core.Sessions import Session
from core.Skills.Skill import Skill
from rebuild.States.Zombie import ZombieState


class Zombie(Skill):
    id = 'zombie'
    name = '–ó–æ–º–±–∏'
    description = '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ —É–º–µ—Ä–µ—Ç—å, –≤—ã –ø—Ä–æ–∂–∏–≤–µ—Ç–µ 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ö–æ–¥–∞.'


@RegisterState(Zombie)
def register(root_context: StateContext[AttachStateEvent]):
    session: Session = root_context.session
    source = root_context.entity

    @RegisterEvent(session.id, event=PreDeathGameEvent, priority=3)
    def func(context: EventContext[PreDeathGameEvent]):
        if root_context.event.entity_id != context.event.entity.id:
            return
        if context.event.canceled:
            return
        zombie = source.get_skill(ZombieState.id)
        if zombie.active:
            return
        if not zombie.active and zombie.deactivations > 0:
            return
        zombie.active = True
        zombie.timer = 1
        session.say(f"üò¨|{source.name} –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å—Ä–∞–∂–∞—Ç—å—Å—è, –∏—Å—Ç–µ–∫–∞—è –∫—Ä–æ–≤—å—é!")
        context.event.canceled = True
