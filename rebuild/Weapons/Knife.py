from core.ContentManager import AttachedAction
from core.Actions.WeaponAction import MeleeAttack
from core.Weapons.Weapon import MeleeWeapon


class Knife(MeleeWeapon):
    id = 'knife'
    name = '–ù–æ–∂'
    description = '–ë–ª–∏–∂–Ω–∏–π –±–æ–π, —É—Ä–æ–Ω 1-3, —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã—Å–æ–∫–∞—è. –ö–∞–∂–¥—ã–π —É–¥–∞—Ä –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ –Ω–∞ —Ü–µ–ª—å.'

    accuracy_bonus = 2
    cubes = 3


@AttachedAction(Knife)
class KnifeAttack(MeleeAttack):
    def func(self, source, target):
        damage = super().attack(source, target)
        if not damage:
            return damage
        bleeding = target.get_skill('bleeding')
        if bleeding.active:
            bleeding.bleeding -= 1
            self.session.say(f"ü©∏|–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ —É—Å–∏–ª–∏–≤–∞–µ—Ç—Å—è!")
        else:
            self.session.say(f'ü©∏|{target.name} –∏—Å—Ç–µ–∫–∞–µ—Ç –∫—Ä–æ–≤—å—é!')
        bleeding.active = True
        return damage
